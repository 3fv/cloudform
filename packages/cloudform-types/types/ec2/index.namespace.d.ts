import RouteTable_ from './routeTable';
import PlacementGroup_ from './placementGroup';
import VPCPeeringConnection_ from './vpcPeeringConnection';
import TransitGateway_ from './transitGateway';
import VPCEndpointServicePermissions_ from './vpcEndpointServicePermissions';
import NetworkAclEntry_ from './networkAclEntry';
import InternetGateway_ from './internetGateway';
import LaunchTemplate_ from './launchTemplate';
import Volume_ from './volume';
import TransitGatewayRouteTableAssociation_ from './transitGatewayRouteTableAssociation';
import SpotFleet_ from './spotFleet';
import VPNConnectionRoute_ from './vpnConnectionRoute';
import NetworkInterfacePermission_ from './networkInterfacePermission';
import EIP_ from './eip';
import SecurityGroupIngress_ from './securityGroupIngress';
import SubnetRouteTableAssociation_ from './subnetRouteTableAssociation';
import Route_ from './route';
import FlowLog_ from './flowLog';
import TransitGatewayRouteTablePropagation_ from './transitGatewayRouteTablePropagation';
import SecurityGroupEgress_ from './securityGroupEgress';
import NetworkInterface_ from './networkInterface';
import TransitGatewayAttachment_ from './transitGatewayAttachment';
import SubnetNetworkAclAssociation_ from './subnetNetworkAclAssociation';
import SubnetCidrBlock_ from './subnetCidrBlock';
import NatGateway_ from './natGateway';
import SecurityGroup_ from './securityGroup';
import Subnet_ from './subnet';
import VPC_ from './vpc';
import Instance_ from './instance';
import DHCPOptions_ from './dhcpOptions';
import TransitGatewayRoute_ from './transitGatewayRoute';
import NetworkAcl_ from './networkAcl';
import VPNGatewayRoutePropagation_ from './vpnGatewayRoutePropagation';
import EgressOnlyInternetGateway_ from './egressOnlyInternetGateway';
import NetworkInterfaceAttachment_ from './networkInterfaceAttachment';
import CustomerGateway_ from './customerGateway';
import TrunkInterfaceAssociation_ from './trunkInterfaceAssociation';
import VolumeAttachment_ from './volumeAttachment';
import Host_ from './host';
import EIPAssociation_ from './eipAssociation';
import VPNGateway_ from './vpnGateway';
import VPCEndpoint_ from './vpcEndpoint';
import VPCGatewayAttachment_ from './vpcGatewayAttachment';
import VPNConnection_ from './vpnConnection';
import VPCCidrBlock_ from './vpcCidrBlock';
import EC2Fleet_ from './ec2Fleet';
import TransitGatewayRouteTable_ from './transitGatewayRouteTable';
import VPCDHCPOptionsAssociation_ from './vpcdhcpOptionsAssociation';
import VPCEndpointConnectionNotification_ from './vpcEndpointConnectionNotification';
export declare namespace EC2 {
    const RouteTable: typeof RouteTable_;
    const PlacementGroup: typeof PlacementGroup_;
    const VPCPeeringConnection: typeof VPCPeeringConnection_;
    const TransitGateway: typeof TransitGateway_;
    const VPCEndpointServicePermissions: typeof VPCEndpointServicePermissions_;
    const NetworkAclEntry: typeof NetworkAclEntry_;
    const InternetGateway: typeof InternetGateway_;
    const LaunchTemplate: typeof LaunchTemplate_;
    const Volume: typeof Volume_;
    const TransitGatewayRouteTableAssociation: typeof TransitGatewayRouteTableAssociation_;
    const SpotFleet: typeof SpotFleet_;
    const VPNConnectionRoute: typeof VPNConnectionRoute_;
    const NetworkInterfacePermission: typeof NetworkInterfacePermission_;
    const EIP: typeof EIP_;
    const SecurityGroupIngress: typeof SecurityGroupIngress_;
    const SubnetRouteTableAssociation: typeof SubnetRouteTableAssociation_;
    const Route: typeof Route_;
    const FlowLog: typeof FlowLog_;
    const TransitGatewayRouteTablePropagation: typeof TransitGatewayRouteTablePropagation_;
    const SecurityGroupEgress: typeof SecurityGroupEgress_;
    const NetworkInterface: typeof NetworkInterface_;
    const TransitGatewayAttachment: typeof TransitGatewayAttachment_;
    const SubnetNetworkAclAssociation: typeof SubnetNetworkAclAssociation_;
    const SubnetCidrBlock: typeof SubnetCidrBlock_;
    const NatGateway: typeof NatGateway_;
    const SecurityGroup: typeof SecurityGroup_;
    const Subnet: typeof Subnet_;
    const VPC: typeof VPC_;
    const Instance: typeof Instance_;
    const DHCPOptions: typeof DHCPOptions_;
    const TransitGatewayRoute: typeof TransitGatewayRoute_;
    const NetworkAcl: typeof NetworkAcl_;
    const VPNGatewayRoutePropagation: typeof VPNGatewayRoutePropagation_;
    const EgressOnlyInternetGateway: typeof EgressOnlyInternetGateway_;
    const NetworkInterfaceAttachment: typeof NetworkInterfaceAttachment_;
    const CustomerGateway: typeof CustomerGateway_;
    const TrunkInterfaceAssociation: typeof TrunkInterfaceAssociation_;
    const VolumeAttachment: typeof VolumeAttachment_;
    const Host: typeof Host_;
    const EIPAssociation: typeof EIPAssociation_;
    const VPNGateway: typeof VPNGateway_;
    const VPCEndpoint: typeof VPCEndpoint_;
    const VPCGatewayAttachment: typeof VPCGatewayAttachment_;
    const VPNConnection: typeof VPNConnection_;
    const VPCCidrBlock: typeof VPCCidrBlock_;
    const EC2Fleet: typeof EC2Fleet_;
    const TransitGatewayRouteTable: typeof TransitGatewayRouteTable_;
    const VPCDHCPOptionsAssociation: typeof VPCDHCPOptionsAssociation_;
    const VPCEndpointConnectionNotification: typeof VPCEndpointConnectionNotification_;
    type RouteTable = RouteTable_;
    type PlacementGroup = PlacementGroup_;
    type VPCPeeringConnection = VPCPeeringConnection_;
    type TransitGateway = TransitGateway_;
    type VPCEndpointServicePermissions = VPCEndpointServicePermissions_;
    type NetworkAclEntry = NetworkAclEntry_;
    type InternetGateway = InternetGateway_;
    type LaunchTemplate = LaunchTemplate_;
    type Volume = Volume_;
    type TransitGatewayRouteTableAssociation = TransitGatewayRouteTableAssociation_;
    type SpotFleet = SpotFleet_;
    type VPNConnectionRoute = VPNConnectionRoute_;
    type NetworkInterfacePermission = NetworkInterfacePermission_;
    type EIP = EIP_;
    type SecurityGroupIngress = SecurityGroupIngress_;
    type SubnetRouteTableAssociation = SubnetRouteTableAssociation_;
    type Route = Route_;
    type FlowLog = FlowLog_;
    type TransitGatewayRouteTablePropagation = TransitGatewayRouteTablePropagation_;
    type SecurityGroupEgress = SecurityGroupEgress_;
    type NetworkInterface = NetworkInterface_;
    type TransitGatewayAttachment = TransitGatewayAttachment_;
    type SubnetNetworkAclAssociation = SubnetNetworkAclAssociation_;
    type SubnetCidrBlock = SubnetCidrBlock_;
    type NatGateway = NatGateway_;
    type SecurityGroup = SecurityGroup_;
    type Subnet = Subnet_;
    type VPC = VPC_;
    type Instance = Instance_;
    type DHCPOptions = DHCPOptions_;
    type TransitGatewayRoute = TransitGatewayRoute_;
    type NetworkAcl = NetworkAcl_;
    type VPNGatewayRoutePropagation = VPNGatewayRoutePropagation_;
    type EgressOnlyInternetGateway = EgressOnlyInternetGateway_;
    type NetworkInterfaceAttachment = NetworkInterfaceAttachment_;
    type CustomerGateway = CustomerGateway_;
    type TrunkInterfaceAssociation = TrunkInterfaceAssociation_;
    type VolumeAttachment = VolumeAttachment_;
    type Host = Host_;
    type EIPAssociation = EIPAssociation_;
    type VPNGateway = VPNGateway_;
    type VPCEndpoint = VPCEndpoint_;
    type VPCGatewayAttachment = VPCGatewayAttachment_;
    type VPNConnection = VPNConnection_;
    type VPCCidrBlock = VPCCidrBlock_;
    type EC2Fleet = EC2Fleet_;
    type TransitGatewayRouteTable = TransitGatewayRouteTable_;
    type VPCDHCPOptionsAssociation = VPCDHCPOptionsAssociation_;
    type VPCEndpointConnectionNotification = VPCEndpointConnectionNotification_;
}
